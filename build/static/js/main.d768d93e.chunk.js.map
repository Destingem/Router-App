{"version":3,"sources":["components/layout/MainNavigation.module.css","store/quote.js","components/UI/LoadingSpinner.js","components/UI/LoadingSpinner.module.css","components/Navbar.js","App.js","store/index.js","index.js"],"names":["module","exports","randomString","require","loadDataFromDB","props","a","fetch","response","json","data","dataArray","Object","values","postDataToDB","id","method","headers","body","JSON","stringify","path","responseGet","comments","comment","quoteSlice","createSlice","name","initialState","quotes","author","text","count","reducers","add","state","action","delete","set","payload","sortByCharAsc","sort","b","sortByCharDesc","state2","reverse","quoteActions","actions","loadDBData","param","dispatch","nullState","then","result","postDB","params","fetchedData","arrayLength","length","console","log","generate","postCommentDB","postCommentsToDB","LoadingSpinner","className","classes","spinner","NavBar","styles","header","logo","nav","exact","activeClassName","active","to","HomePage","React","lazy","Compose","Detail","Error404","App","useDispatch","useState","loading","setLoading","useEffect","fallback","store","configureStore","reducer","quote","quoteReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d768d93e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__17VdV\",\"logo\":\"MainNavigation_logo__31XeC\",\"nav\":\"MainNavigation_nav__3eLft\",\"active\":\"MainNavigation_active__2xlMJ\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nvar randomString = require(\"randomstring\")\r\nasync function loadDataFromDB(props) {\r\n  const response = await fetch(\r\n    \"https://react-api-test-8bcb9-default-rtdb.europe-west1.firebasedatabase.app/quotes.json\"\r\n  );\r\n\r\n  const data = await response.json();\r\n  if (data != null ||undefined ) {\r\n    let dataArray = Object.values(data);\r\n    return dataArray;\r\n  } else{\r\n      return null\r\n  }\r\n  \r\n}\r\nasync function postDataToDB(props) {\r\n  const response = await fetch(\r\n    \"https://react-api-test-8bcb9-default-rtdb.europe-west1.firebasedatabase.app/quotes/\" + props.id + \".json\",\r\n    {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(props),\r\n    }\r\n  );\r\n}\r\nasync function postCommentsToDB(props) {\r\n  const responseGet = await fetch(\r\n    \"https://react-api-test-8bcb9-default-rtdb.europe-west1.firebasedatabase.app/quotes/\" + props.path + \".json\",\r\n    {\r\n      method: \"GET\",\r\n    }\r\n  );\r\n  let data = await responseGet.json();\r\n  if (data.comments) {\r\n    data.comments = [...data.comments, props.comment]\r\n  } else{\r\n    data.comments = [props.comment]\r\n  }\r\n  const responsePost = await fetch(\r\n    \"https://react-api-test-8bcb9-default-rtdb.europe-west1.firebasedatabase.app/quotes/\" + props.path + \".json\",\r\n    {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    }\r\n  );\r\n}\r\nconst initialState = {\r\n  quotes: [{ id: 1, author: \"Ondřej Zaplatílek\", text: \"Ahoj\" }],\r\n  count: 1,\r\n};\r\nconst quoteSlice = createSlice({\r\n  name: \"sliceForQuote\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      return state;\r\n    },\r\n    delete(state) {\r\n      return state;\r\n    },\r\n    set(state, action) {\r\n      state.quotes = action.payload;\r\n    },\r\n    sortByCharAsc(state){\r\n      function compare( a, b ) {\r\n        if ( a.author< b.author){\r\n          return -1;\r\n        }\r\n        if ( a.author > b.author ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n     \r\n      state.quotes = state.quotes.sort(compare);\r\n    },\r\n    sortByCharDesc(state){\r\n      function compare( a, b ) {\r\n        if ( a.author< b.author){\r\n          return -1;\r\n        }\r\n        if ( a.author > b.author ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      var state2 = state.quotes.sort(compare).reverse()\r\n        state.quotes = state2\r\n      \r\n    }\r\n  },\r\n});\r\n\r\nexport default quoteSlice.reducer;\r\nexport const quoteActions = quoteSlice.actions;\r\nexport const loadDBData = (param) => (dispatch) => {\r\n  var nullState = [{ id: 1, author: \"Try fetch again\", text: \"Fetch failed\" }];\r\n  var fetched = loadDataFromDB();\r\n  fetched.then((result) => {\r\n   if (result !== null) {\r\n     var values = Object.values(result)\r\n     \r\n        dispatch(quoteSlice.actions.set(values));\r\n   } else{\r\n    dispatch(quoteSlice.actions.set(nullState));\r\n   }\r\n   \r\n  });\r\n};\r\nexport const postDB = (params) => async (dispatch) => {\r\n  const fetchedData = await loadDataFromDB()\r\n  if (fetchedData !== null  || undefined) {\r\n    var values = await Object.values(fetchedData)\r\n    var arrayLength = values.length\r\n  } else{\r\n    var arrayLength = 0\r\n  }\r\n  console.log(fetchedData);\r\n  console.log(values);\r\n      params.id = arrayLength + randomString.generate(12)\r\n      postDataToDB(params).then(()=> {\r\n          dispatch(loadDBData())\r\n  })\r\n  \r\n    \r\n  \r\n    \r\n}\r\nexport const postCommentDB = (params) => (dispatch) => {\r\n  console.log(params);\r\n  postCommentsToDB(params).then(()=> {\r\n      dispatch(loadDBData())\r\n  })\r\n  \r\n}","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__xjI-s\"};","import { NavLink } from \"react-router-dom\"\r\nimport styles from \"./layout/MainNavigation.module.css\"\r\n\r\nexport default function NavBar(){\r\n    return(\r\n        <header className={styles.header}>\r\n            \r\n            <p className={styles.logo}>Quotes</p>\r\n            <div className={styles.nav}>\r\n            <ul >\r\n                <li><NavLink exact activeClassName={styles.active} to=\"/\">Home</NavLink></li>\r\n                <li><NavLink exact activeClassName={styles.active} to=\"/compose\">Compose</NavLink></li>\r\n            </ul>\r\n            </div>\r\n        \r\n        </header>\r\n    )\r\n}","import React from \"react\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {loadDBData} from \"./store/quote\"\n//Elements\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport NavBar from \"./components/Navbar\";\n// Lazy\nconst HomePage = React.lazy(() =>  import(\"./pages/homepage\"))\nconst Compose = React.lazy(() =>  import(\"./pages/compose\"))\nconst Detail = React.lazy(()=> import(\"./pages/detail\"))\nconst Error404 = React.lazy(()=> import(\"./pages/error404\"))\nfunction App() {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true);\n  function fetchDB(){\n    dispatch(loadDBData())\n  }\n  useEffect(() => {\n    setLoading(false);\n    fetchDB()\n  }, [])\n  \n  return (\n    <div>\n      {loading ? <LoadingSpinner /> : <NavBar />}\n\n      <Suspense fallback={<LoadingSpinner />}>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/compose\">\n          <Compose />\n        </Route>\n        <Route exact path=\"/quote/:quoteId\">\n        <Detail />\n        </Route>\n        <Route exact path=\"/*\">\n        <Error404 />\n        </Route>\n      </Switch>\n      </Suspense>\n\n    </div>\n  );\n  \n}\n\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport quoteReducer from \"./quote\";\r\n\r\n\r\n\r\n\r\n\r\nconst store = configureStore({reducer: {quote: quoteReducer}})\r\n\r\nexport default store","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\nimport { Provider } from 'react-redux';\nimport store from \"./store/index\"\nReactDOM.render(<BrowserRouter><Provider store={store}><App /></Provider></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}