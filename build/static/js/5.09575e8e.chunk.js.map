{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/compose.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isSubmitted","setIsSubmitted","typing","setTyping","typingHandler","current","value","to","form","onSubmit","event","preventDefault","enteredAuthor","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","when","message","control","htmlFor","type","id","ref","onChange","rows","actions","Compose","dispatch","useDispatch","postDB"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yICKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EArDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAsCE,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaA,SAASC,IAC8B,KAAjCR,EAAeS,QAAQC,OAA+C,KAA/BR,EAAaO,QAAQC,MAC9DH,GAAU,IAEK,IAAXD,GACFC,GAAU,GAIhB,OAEE,eAAC,EAAD,WACEH,GAAgB,cAAC,IAAD,CAAUO,GAAG,MAC7B,uBAAMhB,UAAWC,IAAQgB,KAAMC,SAzBnC,SAA2BC,GACzBA,EAAMC,iBACNR,GAAU,GAEV,IAAMS,EAAgBhB,EAAeS,QAAQC,MACvCO,EAAcf,EAAaO,QAAQC,MAIzChB,EAAMwB,WAAW,CAAEC,OAAQH,EAAeI,KAAMH,IAChDZ,GAAe,IAeb,UACGX,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAGJ,cAAC,IAAD,CAAQC,KAAMlB,EAAQmB,QAAQ,kBAC9B,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK9B,EAAgB+B,SAAUvB,OAEhE,sBAAKb,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOG,KAAK,IAAIF,IAAK5B,EAAc6B,SAAUvB,OAE5D,qBAAKb,UAAWC,IAAQqC,QAAxB,SACE,wBAAQtC,UAAU,MAAlB,gC,QCjDK,SAASuC,IACpB,IAAMC,EAAWC,cAIjB,OAAQ,cAAC,EAAD,CAAWlB,WAHnB,SAAkBxB,GACdyC,EAASE,YAAO3C","file":"static/js/5.09575e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3QWoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3wOe2\",\"loading\":\"QuoteForm_loading__6Dz1C\",\"control\":\"QuoteForm_control__1oZ8u\",\"actions\":\"QuoteForm_actions__2b-5X\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport Router ,{ Route, Switch, Redirect, Prompt } from \"react-router-dom\";\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isSubmitted, setIsSubmitted] = useState(false) \n  const [typing, setTyping] = useState(false)\n  function submitFormHandler(event) {\n    event.preventDefault();\n    setTyping(false)\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    setIsSubmitted(true)\n  }\n  function typingHandler(){\n    if (authorInputRef.current.value === \"\" && textInputRef.current.value === \"\") {\n      setTyping(false)\n    } else{\n      if (typing === false) {\n        setTyping(true)\n      }\n    }\n  }\n  return (\n   \n    <Card>\n     {isSubmitted  && <Redirect to=\"/\"/>}\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n        <Prompt when={typing} message=\"Are you sure?\" />\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} onChange={typingHandler}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef} onChange={typingHandler}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import { useDispatch } from \"react-redux\"\r\nimport QuoteForm from \"../components/quotes/QuoteForm\"\r\nimport { quoteActions, postDB, loadDBData } from \"../store/quote\"\r\nexport default function Compose(){\r\n    const dispatch = useDispatch()\r\n    function onSubmit(props){\r\n        dispatch(postDB(props))\r\n    }\r\n    return (<QuoteForm onAddQuote={onSubmit}/>)\r\n}"],"sourceRoot":""}