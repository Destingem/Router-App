{"version":3,"sources":["components/quotes/QuoteItem.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteList.js","components/quotes/SortButton.js","pages/homepage.js"],"names":["QuoteItem","props","useState","item","setItem","redirect","setRedirect","useEffect","console","log","className","classes","to","id","text","author","hideBtn","onClick","module","exports","quoteActions","QuoteList","useDispatch","quotes","useSelector","state","quote","list","map","path","SortButton","history","useHistory","dispatch","params","type","push","sortByCharAsc","sortByCharDesc","loadDBData","name","HomePage"],"mappings":"6LAgCeA,IA5BG,SAACC,GACjB,MAAwBC,mBAASD,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAQA,OAJFC,qBAAU,WACRH,EAAQH,KACP,CAACA,IACFO,QAAQC,IAAIN,GAEV,qBAAIO,UAAWC,IAAQR,KAAvB,UACGE,GAAY,cAAC,IAAD,CAAUO,GAAI,SAAWX,EAAMY,KAC5C,mCACE,qCACE,4BAAIV,EAAKW,SAEX,qCAAaX,EAAKY,YAEnBZ,EAAKa,QAAU,KACd,mBAAGN,UAAU,MAAMO,QAjBzB,WACEX,GAAY,IAgBR,kC,mBCvBRY,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,0ICI3DX,QAAQC,IAAIW,KACZ,IAqBeC,EArBG,SAACpB,GACAqB,cAAjB,IACIC,EAASC,aAAY,SAAAC,GAAU,OAAOA,EAAMC,MAAMH,UAEtD,OADAf,QAAQC,IAAIc,GAEV,cAAC,WAAD,UACE,oBAAIb,UAAWC,IAAQgB,KAAvB,SACGJ,EAAOK,KAAI,SAACF,GAAD,OACV,cAAC1B,EAAA,EAAD,CAEEa,GAAIa,EAAMb,GACVE,OAAQW,EAAMX,OACdD,KAAMY,EAAMZ,KACZe,KAAM5B,EAAM4B,MAJPH,EAAMb,Y,OCZR,SAASiB,EAAW7B,GAC/B,IAAI8B,EAAUC,cACRC,EAAWX,cAiBjB,OACI,mCACA,wBAAQL,QAlBZ,SAA0BiB,GAClBjC,EAAMkC,MACNJ,EAAQK,KAAK,SAAWnC,EAAMkC,MACb,OAAdlC,EAAMkC,KACNF,EAASb,IAAaiB,iBACD,QAAdpC,EAAMkC,KAChBF,EAASb,IAAakB,kBAEnBL,EAASM,iBAGZR,EAAQK,KAAK,IACbH,EAASM,OAMb,SAAoCtC,EAAMuC,SCrBnC,SAASC,IAIpB,OACI,qCACA,cAACX,EAAD,CAAYU,KAAK,YACjB,cAACV,EAAD,CAAYK,KAAK,MAAMK,KAAK,cAC5B,cAACV,EAAD,CAAYK,KAAK,OAAOK,KAAK,eAC7B,cAAC,EAAD","file":"static/js/4.8d7837b2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\nconst QuoteItem = (props) => {\n  const [item, setItem] = useState(props);\n  const [redirect, setRedirect] = useState(false);\n  function handleClick() {\n    setRedirect(true);\n  }\nuseEffect(()=> {\n  setItem(props)\n}, [props])\n  console.log(item);\n  return (\n    <li className={classes.item}>\n      {redirect && <Redirect to={\"quote/\" + props.id} />}\n      <figure>\n        <blockquote>\n          <p>{item.text}</p>\n        </blockquote>\n        <figcaption>{item.author}</figcaption>\n      </figure>\n      {item.hideBtn ? null : (\n        <a className=\"btn\" onClick={handleClick}>\n          View Fullscreen\n        </a>\n      )}\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__j6u6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__uvS9h\",\"sorting\":\"QuoteList_sorting__1TQeI\"};","import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n import { quoteActions } from '../../store/quote';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nconsole.log(quoteActions);\nconst QuoteList = (props) => {\n  const dispatch = useDispatch()\n  let quotes = useSelector(state => {return state.quote.quotes})\n  console.log(quotes);\n  return (\n    <Fragment>\n      <ul className={classes.list}>\n        {quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n            path={props.path}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { loadDBData, quoteActions } from \"../../store/quote\"\r\nexport default function SortButton(props){\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    function ascendingHandler(params){\r\n        if (props.type) {\r\n            history.push(\"?sort=\" + props.type)\r\n           if (props.type == \"asc\") {\r\n               dispatch(quoteActions.sortByCharAsc())\r\n           } else if (props.type == \"desc\"){\r\n            dispatch(quoteActions.sortByCharDesc())\r\n           } else{\r\n               dispatch(loadDBData())\r\n           }\r\n        } else{\r\n            history.push(\"\")\r\n            dispatch(loadDBData)\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <>\r\n        <button onClick={ascendingHandler}>{props.name}</button>\r\n        </>\r\n    )\r\n}","import QuoteList from \"../components/quotes/QuoteList\"\r\nimport SortButton from \"../components/quotes/SortButton\";\r\n\r\nexport default function HomePage (){\r\n    \r\n    \r\n    \r\n    return(\r\n        <>\r\n        <SortButton name=\"default\"/>\r\n        <SortButton type=\"asc\" name=\"ascending\"/>\r\n        <SortButton type=\"desc\" name=\"descending\"/>\r\n        <QuoteList />\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}